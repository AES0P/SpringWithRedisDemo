#1、配置根Logger ,语法为log4j.rootLogger = [ level ] , appenderName1, appenderName2, 
#appenderName: 就是指定日志信息输出到哪个地方

#这里设置的日志级别权限最高，如果设置了INFO那么所有的debug就打印不出来了
log4j.rootLogger=INFO,A1,ROLLING_FILE

#配置日志信息输出目的地
log4j.appender.A1=org.apache.log4j.ConsoleAppender
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=%d %5p [%t] (%F:%L) - %m%n

#指定日志消息的输出最低层次,这个测试的时候 可以不写，或者级别设置为debug
log4j.appender.A1.layout.ConversionPattern.Threshold=DEBUG


#当输出信息于回滚文件时
#指定以文件的方式输出日志
log4j.appender.ROLLING_FILE=org.apache.log4j.RollingFileAppender
#显示日志的级别，这个日志级别在log4j.rootLogger之下。例如设置了ERROR就只输出ERROR级别的
 log4j.appender.ROLLING_FILE.Threshold=ERROR 
#存放日志文件地址,${youdao.root}这样tomact启动之后日志就写到tomact编译的目录下面 例如*\apache-tomcat-7.0.2\webapps\TeamStudy\WEB-INF\logs
log4j.appender.ROLLING_FILE.File=${youdao.root}/WEB-INF/logs/mylog.log
#手动测试加载日志文件 我们可以指定这个目录
#log4j.appender.ROLLING_FILE.File=src/main/webapp/WEB-INF/logs/mylog.log
log4j.appender.ROLLING_FILE.Append=true
#文件最大的尺寸
log4j.appender.ROLLING_FILE.MaxFileSize=512KB
#最大备份数
log4j.appender.ROLLING_FILE.MaxBackupIndex=20
log4j.appender.ROLLING_FILE.layout=org.apache.log4j.PatternLayout
#配置日志信息的格式 以下四种格式
#1.org.apache.log4j.HTMLLayout （以HTML 表格形式布局），
#2.org.apache.log4j.PatternLayout （可以灵活地指定布局模式），
#3.org.apache.log4j.SimpleLayout （包含日志信息的级别和信息字符串），
# 4.org.apache.log4j.TTCCLayout （包含日志产生的时间、线程、类别等等信息）
log4j.appender.ROLLING_FILE.layout.ConversionPattern= %d -%-4r [%t] %c %x %-5p - %m [%l] %n


#Log4J 对应用性能的影响
#如果在程序运行中输出大量日志，显然会对应用的性能造成一定的影响。Log4J 对性能的影响取决于以下因素：
#日志输出目的地：输出到控制台的速度和输出到文件系统的速度是不一样的。
#日志输出格式：格式简单，速度也更快。
#日志级别：日志级别设置的越低，输出的日志内容越多，对性能的影响也越大



